name: CODE-REAVER Copilot Ban Hammer

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/ban-copilot.yml'
      - 'configs/model_manifest.json'
      - 'datasets/classical_algo_comparison.jsonl'
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC to enforce ban

permissions:
  contents: write
  actions: write
  pull-requests: write

jobs:
  ban-copilot:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git-lfs jq
        git lfs install
        python3 -m pip install torch transformers datasets

    - name: Nuke Copilot Artifacts
      run: |
        echo "[CYBERFORGE] Obliterating Copilotâ€™s garbage..."
        rm -rf .github/copilot-memory/ || true
        find . -name "*copilot*.yml" -not -name "ban-copilot.yml" -delete
        find . -name "*.backup" -delete
        find . -name "*.log.backup" -delete
        find . -name "*.png" -delete
        find . -name "*.jpg" -delete
        echo "[CYBERFORGE] Copilot artifacts annihilated."

    - name: Update .gitignore
      run: |
        echo "[CYBERFORGE] Hardening .gitignore against Copilot..."
        cat > .gitignore << 'EOF'
        # CODE-REAVER Hardened .gitignore
        *.backup
        *.log.backup
        *.png
        *.jpg
        .github/copilot-memory/
        .github/workflows/*copilot*.yml
        models/*
        !models/.gitkeep
        logs/*.log
        !logs/model_sync.jsonl
        !logs/error.log
        !logs/training_metrics.jsonl
        !logs/file_index.jsonl
        !logs/ban_copilot.jsonl
        *.tar.gz
        .cache/
        *.pyc
        __pycache__/
        EOF

    - name: Index Repository Files
      run: |
        echo "[CYBERFORGE] Indexing repo files before changes..."
        mkdir -p logs
        touch logs/file_index.jsonl
        find . -type f | while read -r file; do
          size=$(stat -c %s "$file" 2>/dev/null || echo "unknown")
          modified=$(stat -c %Y "$file" 2>/dev/null | date -u -d "@$(stat -c %Y "$file")" +%Y-%m-%dT%H:%M:%SZ 2>/dev/null || echo "unknown")
          hash=$(sha256sum "$file" 2>/dev/null | cut -d' ' -f1 || echo "unknown")
          echo "{\"file\": \"$file\", \"size\": \"$size\", \"modified\": \"$modified\", \"hash\": \"$hash\", \"ts\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}" >> logs/file_index.jsonl
        done

    - name: Enforce Directory Structure
      run: |
        echo "[CYBERFORGE] Enforcing hardened directory structure..."
        mkdir -p datasets models logs scripts configs
        touch models/.gitkeep logs/.gitkeep datasets/.gitkeep
        chmod 700 scripts/*.sh 2>/dev/null || true
        chmod 644 configs/* 2>/dev/null || true

    - name: Clone Models
      run: |
        echo "[CYBERFORGE] Cloning approved models..."
        jq -r '.models[] | "\(.repo) \(.dir)"' configs/model_manifest.json | grep -E '^https://huggingface.co/.*\s[A-Za-z0-9.-]+$' || { echo "Invalid manifest format" >> logs/error.log; exit 1; }
        jq -r '.models[] | "\(.repo) \(.dir)"' configs/model_manifest.json | while read repo dir; do
          if [ ! -d "models/$dir" ]; then
            echo "[CYBERFORGE] Cloning $repo -> models/$dir"
            git clone --depth 1 "$repo" "models/$dir" || { echo "Clone failed for $repo" >> logs/error.log; exit 1; }
            rm -rf "models/$dir/.git"
          else
            echo "[CYBERFORGE] Skipping models/$dir"
          fi
        done

    - name: Verify Dataset
      run: |
        echo "[CYBERFORGE] Verifying classical algorithm dataset..."
        if [ ! -f "datasets/classical_algo_comparison.jsonl" ]; then
          echo "Error: Dataset not found" >> logs/error.log
          exit 1
        fi
        grep -E '(os\.system|subprocess\.run|eval\(|exec\()' datasets/classical_algo_comparison.jsonl && { echo "Security violation in dataset" >> logs/error.log; exit 1; }

    - name: Fine-Tune Models
      run: |
        echo "[CYBERFORGE] Fine-tuning models..."
        python3 scripts/cyberforge_finetune.py || { echo "Fine-tuning failed" >> logs/error.log; exit 1; }

    - name: Forensic Log
      run: |
        echo "[CYBERFORGE] Logging ban enforcement..."
        ts=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        echo "{\"ts\": \"$ts\", \"event\": \"copilot_ban\", \"trigger\": \"${{ github.event_name }}\", \"actor\": \"${{ github.actor }}\", \"models\": $(cat configs/model_manifest.json), \"dataset\": \"classical_algo_comparison.jsonl\", \"status\": \"success\"}" >> logs/ban_copilot.jsonl

    - name: Commit and Push
      run: |
        echo "[CYBERFORGE] Committing ban enforcement..."
        git config user.name "CODE-REAVER[cyberforge]"
        git config user.email "codereaver@spiralgang.io"
        git add .gitignore models/ logs/ datasets/ scripts/ .github/workflows/
        git diff --cached --quiet || git commit -m "CODE-REAVER: Ban Copilot, enforce new models, secure repo"
        git push || echo "Push failed" >> logs/error.log

    - name: Disable Copilot in Repo Settings
      run: |
        echo "[CYBERFORGE] Attempting to disable Copilot via API..."
        if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               -X PATCH \
               -d '{"copilot_enabled": false}' \
               https://api.github.com/repos/spiralgang/DevUl-Army--__--Living-Sriracha-AGI
        else
          echo "[CYBERFORGE] No GITHUB_TOKEN provided, skipping Copilot disable via API"
        fi
