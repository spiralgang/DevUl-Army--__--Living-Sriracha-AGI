name: Agent Ops (precision-triggered)

on:
  push:
    branches: [ "main", "copilot/fix-*" ]
    paths:
      - ".github/workflows/"
      - "scripts/"
      - "configs/activation_rules.json"
      - "ai/"
      - "app/src/"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/"
      - "scripts/"
      - "configs/activation_rules.json"
      - "ai/"
      - "app/src/"
  workflow_dispatch:
    inputs:
      reason:
        description: Why are you running this?
        required: true
        type: string

permissions:
  contents: write

concurrency:
  group: agent-ops-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Set offline mode
        run: |
          export TRANSFORMERS_OFFLINE=1
          export HF_HUB_OFFLINE=1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore baseline state (optional cache)
        uses: actions/cache@v4
        with:
          path: |
            .baseline/
          key: baseline-${{ runner.os }}-${{ hashFiles('configs/', 'scripts/') }}

      - name: Make scripts executable
        run: chmod +x scripts/*.sh || true

      - name: Rehydrate state
        run: ./scripts/rehydrate-state.sh

      - name: Validate system
        run: ./scripts/validate-system.sh

      - name: Drift guard
        run: ./scripts/drift-guard.sh

      - name: Forensic start
        env:
          ACTOR: ${{ github.actor }}
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}
          SHA: ${{ github.sha }}
          RUN_ID: ${{ github.run_id }}
        run: ./scripts/forensic-log.sh start

  build:
    needs: preflight
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/heads/copilot/fix-') ||
      (github.event_name == 'pull_request') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Forensic step - build
        run: ./scripts/forensic-log.sh step build "Initiating build pipeline"

      - name: Android build diagnostics (non-fatal)
        continue-on-error: true
        run: |
          ./gradlew --version || true
          ./gradlew clean build --no-daemon --stacktrace || true

      - name: Forensic step - build complete
        run: ./scripts/forensic-log.sh step build_complete "Build pipeline ended"

  finalize:
    needs: [preflight, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Forensic end
        run: ./scripts/forensic-log.sh end

  merge-gate:
    needs: [finalize]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Block merge if agent run failed
        run: |
          if [[ "${{ needs.finalize.result }}" != "success" ]]; then
            echo "Agent run failed â€” blocking merge."
            exit 1
          fi