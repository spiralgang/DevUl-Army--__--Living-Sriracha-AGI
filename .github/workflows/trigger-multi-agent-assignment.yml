name: Trigger Multi-Agent Assignment
on:
  workflow_dispatch:
    inputs:
      target_issues:
        description: 'Issues to assign agents to (default: 47,45,44,42)'
        required: false
        type: string
        default: '47,45,44,42'
      force_reassign:
        description: 'Force reassignment even if PRs exist'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: write

jobs:
  trigger-assignment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install requests PyYAML

      - name: Run Multi-Agent Coordinator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 tools/multi_agent_coordinator.py \
            --issues "${{ inputs.target_issues }}" \
            --force-reassign "${{ inputs.force_reassign }}" \
            --repo "${{ github.repository }}"

      - name: Trigger Agent Workflows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Parse issue numbers and trigger appropriate agent workflows
          IFS=',' read -ra ISSUES <<< "${{ inputs.target_issues }}"
          for issue in "${ISSUES[@]}"; do
            issue=$(echo "$issue" | xargs)  # trim whitespace
            echo "Triggering workflow for issue #$issue"
            
            # Trigger frontend agent for issue 47 (Todo app)
            if [ "$issue" = "47" ]; then
              gh workflow run frontend-specialist-agent.yml -f issue_number="$issue"
              echo "✅ Triggered Frontend Specialist Agent for issue #$issue"
            fi
            
            # Trigger infrastructure agent for issue 42 (repository structure)
            if [ "$issue" = "42" ]; then
              echo "Issue #42 already implemented according to docs/ISSUE_42_IMPLEMENTATION.md"
            fi
            
            # For other issues, they will be handled by future specialized agents
            if [ "$issue" = "45" ] || [ "$issue" = "44" ]; then
              echo "⏳ Issue #$issue assigned to specialized agent (workflow to be implemented)"
            fi
          done

      - name: Create summary comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a summary of what was done
          cat > summary.md << 'EOF'
          # 🤖 Multi-Agent Assignment Summary

          ## Triggered Assignments
          
          Issues processed: `${{ inputs.target_issues }}`
          Force reassign: `${{ inputs.force_reassign }}`
          
          ## Agent Specializations
          
          - **Issue #47** (To-Do App): 🎨 Frontend Specialist Agent (Phi2)
          - **Issue #45** (Workflow Upgrades): 🏗️ Infrastructure Agent (DeepSeek)  
          - **Issue #44** (Maintenance): 🛡️ Security & Standards Agent (Mixtral)
          - **Issue #42** (Repository Structure): ✅ Already implemented
          
          ## Next Steps
          
          1. Check for new PRs created by agents
          2. Monitor agent progress in their respective branches
          3. Review and merge completed work
          4. Use chat-ops commands (`/assimilate`, `/validate`, `/status`) for monitoring
          
          ## Available Commands
          
          - `/assimilate` - Run frontend-backend integration audit
          - `/validate` - Run full system validation
          - `/status` - Get repository status report
          
          ---
          *Generated by Multi-Agent Issue Coordinator*
          EOF
          
          echo "## 🤖 Multi-Agent Assignment Completed" >> $GITHUB_STEP_SUMMARY
          cat summary.md >> $GITHUB_STEP_SUMMARY